[
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "Data Simulation",
    "section": "",
    "text": "This section describes the steps to simulate occurrence data for fitting spatially explicit occupancy models in R-INLA."
  },
  {
    "objectID": "projects.html#state-process-model-sub-component",
    "href": "projects.html#state-process-model-sub-component",
    "title": "Data Simulation",
    "section": "State process model sub-component",
    "text": "State process model sub-component\nDefine model parameters \\(\\beta\\) and compute the occupancy probabilities \\(\\psi\\) and occupancy states \\(z\\) (Figure 3)\n\nCode# State process model coeficcients\nbeta &lt;- c(NA,NA)\nbeta[1] &lt;-  qlogis(0.3) # Base line occupancy probability\nbeta[2] &lt;- 1.5  # environmental covariate effect\n\n# Occupancy probabilities\npsi &lt;- inla.link.logit(beta[1] + beta[2]*x_s + omega_s, inverse = T)\n\n# True occupancy state\n\nset.seed(seed)\nz &lt;- rbinom(ncells, size = 1, prob = psi)\n\n\n\n\n\n\nFigure 3: Simulated occupancy probabilities and true presence/absence state"
  },
  {
    "objectID": "projects.html#observational-process-model-sub-component",
    "href": "projects.html#observational-process-model-sub-component",
    "title": "Data Simulation",
    "section": "Observational process model sub-component",
    "text": "Observational process model sub-component\nRandom sample of 20 % of the total cells and draw a random number of \\(K\\) visits per cell by setting a minimum of 1 and a maximum of 5 visits per site/cell.\n\nCode# number of cells/sites in the sample\nnsites = round(ncells*.20)\nsite_id = sample(1:ncells, size=nsites, replace=FALSE) # cell id\n# add an indicator of whether a cell is in the sample or not\ncustomGrid$sample &lt;- ifelse(customGrid$cellid%in%site_id,1,0)\n\nmin_nvisits = 1 # minimum number of visits\nmax_nvisits = 5 # maximum number of visits\n# Probabiliies of drawing 1 thru 5 visits per site\nprobs = rep(1/length(min_nvisits:max_nvisits),length(min_nvisits:max_nvisits))\n# Number of visits\nnvisits = sample(min_nvisits:max_nvisits,nsites, prob = probs, replace = T)\n\n\nDefine model parameters \\(\\alpha\\) , detection probabilities \\(p\\) and observed number of occurrences per site \\(y\\) (Figure 4):\n\nCode# Observational process model coeficcients\nalpha &lt;- c(NA,NA)\nalpha[1] &lt;- qlogis(0.6) # Base line detection probability\nalpha[2] &lt;- 1 # detection covariate effect\n\n# Detection probabilities\np &lt;- inla.link.logit(alpha[1] + alpha[2]*g_s[site_id], inverse = T)\ny &lt;- rbinom(n = nsites,size = nvisits,prob = p*z[site_id] )\n\n\nCreate data set Table 1:\n\nCode# centroid of the cell\n\nOcc_data_1 &lt;- customGrid |&gt;\n  st_centroid() |&gt;\n  filter(sample==1) |&gt;\n  dplyr::select(-c('sample'))\n\ny_counts = data.frame(y = y , cellid = site_id, nvisits = nvisits)\n\nOcc_data_1 &lt;- left_join(Occ_data_1,y_counts,by = \"cellid\")\n\n# append coordinates as columns\n\nOcc_data_1[,c('x.loc','y.loc')] &lt;- st_coordinates(Occ_data_1)\nOcc_data_1 = st_drop_geometry(Occ_data_1)\n# Save CSV file for analysis\nwrite.csv(Occ_data_1,file='Occ_data_1.csv',row.names = F)\n\n\n\n\n\n\nTable 1: First 6 entries of the occupancy data\n\ncellid\ny\nnvisits\nx.loc\ny.loc\n\n\n\n2\n0\n5\n4.5\n1.5\n\n\n5\n3\n4\n13.5\n1.5\n\n\n6\n2\n3\n16.5\n1.5\n\n\n7\n4\n5\n19.5\n1.5\n\n\n9\n0\n1\n25.5\n1.5\n\n\n23\n0\n4\n67.5\n1.5\n\n\n\n\n\n\n\n\n\n\nFigure 4: Number of times species was detected at sampled sites and true occupancy state."
  },
  {
    "objectID": "projects.html#footnotes",
    "href": "projects.html#footnotes",
    "title": "Data Simulation",
    "section": "Footnotes",
    "text": "Footnotes\n\nNote: If you are using INLA development version you might need modify the book.rspde function. Specifically, change the inla.mesh.project function to fmesher::fm_evaluator function to project the mesh into the domain coordinates.↩︎"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Fitting Occupancy models with R-INLA",
    "section": "",
    "text": "This section describes the steps to fit occupancy models in R-INLA using simulated data (simulation details can be found in the Data Simulation tab)."
  },
  {
    "objectID": "index.html#set-up",
    "href": "index.html#set-up",
    "title": "Fitting Occupancy models with R-INLA",
    "section": "Set up",
    "text": "Set up\nWe first load the data and prepare it in the format that is required by the INLA library.\n\nCodelibrary(INLA)\nlibrary(inlabru)\nlibrary(fmesher)\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(terra)\nlibrary(dplyr)\n\nSSOM &lt;- read.csv(\"Occ_data_1.csv\")\nx_covariate &lt;- terra::rast('raster data/x_covariat.tif')\ng_covariate &lt;- terra::rast('raster data/g_covariat.tif')\n\n# Extract the covariate values (NOTE: adapt this if inlabru is used)\n\n# Convert to sf \nSSOM &lt;- SSOM |&gt;\n  st_as_sf(coords = c('x.loc','y.loc')) \n\n#evaluate covariartes at each coordinate\nSSOM = SSOM |&gt; \n        mutate(terra::extract(x_covariate,st_coordinates(SSOM)),\n               terra::extract(g_covariate,st_coordinates(SSOM)))\n\n\n\n\n\n\nTable 1: First 6 entries of the occupancy data\n\ncellid\ny\nnvisits\ngeometry\nx_s\ng_s\n\n\n\n2\n0\n5\nPOINT (4.5 1.5)\n0.0674760\n1.4913634\n\n\n5\n3\n4\nPOINT (13.5 1.5)\n-0.2770668\n0.9355086\n\n\n6\n2\n3\nPOINT (16.5 1.5)\n-0.4963150\n0.8894699\n\n\n7\n4\n5\nPOINT (19.5 1.5)\n-0.4927090\n0.7932032\n\n\n9\n0\n1\nPOINT (25.5 1.5)\n-0.2284233\n0.5705246\n\n\n23\n0\n4\nPOINT (67.5 1.5)\n0.7247477\n-0.1598709\n\n\n\n\n\n\nCreate the mesh … add details\n\nCodeboundary_sf = st_bbox(c(xmin = 0, xmax = 300, ymax = 0, ymin = 300)) |&gt; \n  st_as_sfc()\n\nmesh = fm_mesh_2d(loc.domain = st_coordinates(boundary_sf)[,1:2],\n                    offset = c(-0.1, -.2),\n                    max.edge = c(15, 30))\nmatern &lt;- inla.spde2.pcmatern(mesh,\n                              prior.range = c(100, 0.5),  \n                              prior.sigma = c(1, 0.5))\n\n\n\n\n\n\n\n\n\n\nCreate projector A matrix and make stacks .\nadd list of the arguments for building the stack (switch with inlabru details)\n\nCode# A_sp &lt;- inla.spde.make.A(mesh = mesh, \n#                       loc = SSOM[,c('x.loc','y.loc')] |&gt; as.matrix())\n\nA_sp &lt;- inla.spde.make.A(mesh = mesh, \n                      loc = st_coordinates(SSOM))\n\niset_sp &lt;- inla.spde.make.index(name = \"spatial_field\", matern$n.spde)\n\n\nstk &lt;- inla.stack(data=list(Ycounts = SSOM$y, # observed occurrences\n                            Ncounts = SSOM$nvisits, # number of visits\n                            det_cov = SSOM$x_s, # detection covariate\n                            Int_det = rep(1,length(SSOM$y))), # Baseline detection \n                  A=list(A_sp,1),  # the A matrix; the 1 is included to make the list(covariates)\n                  effects=list(c(list(Int_occ=1), #the Intercept\n                                 iset_sp),  #the spatial index\n                               #the covariates\n                               list(occ_cov = SSOM$x_s)), \n                  #this is a quick name so yo can call upon easily\n                  tag='ssom')\n\n\nNow we define the model components (left hand side -observational model components; right hand side - state process components) and fit the model (switch with inlabru details):\n\nCodeformula_ssom &lt;- inla.mdata(cbind(Ycounts,Ncounts),cbind(Int_det,det_cov)) ~  -1 + Int_occ +  occ_cov +  f(spatial_field, model=matern) \n\n\nmodel_ssom &lt;- inla(formula_ssom, data=inla.stack.data(stk), \n                 family= '0binomialS',\n                 control.fixed =  list(prec = 1/2.72, prec.intercept = 1/2.72),\n                 control.predictor=list(A=inla.stack.A(stk),compute=TRUE),\n                 control.compute = list(dic = TRUE, waic = TRUE, config = TRUE),\n                 verbose = FALSE,\n                 control.family = list(control.link = list(model = \"logit\"),\n                                       link.simple = \"logit\",\n                 hyper = list(\n                   beta1 = list(param = c(0,1), initial = -1),\n                   beta2 = list(param = c(0,1/2.72)))\n                 )\n                 )\n\n\nResults\nShow the summary results in Table 2:\n\n\n\n\nTable 2: summary results from output\n\npar\ntrue\nmean\nquant0.025\nquant0.975\n\n\n\n\\(\\beta_0\\)\n-0.85\n-2.34\n-3.99\n-1.00\n\n\n\\(\\beta_1\\)\n1.50\n1.14\n0.81\n1.47\n\n\n\\(\\alpha_0\\)\n0.41\n0.35\n0.22\n0.48\n\n\n\\(\\alpha_1\\)\n1.00\n0.11\n-0.01\n0.23\n\n\n\\(\\rho\\)\n100.00\n203.39\n100.41\n383.38\n\n\n\\(\\sigma\\)\n1.00\n1.55\n0.98\n2.40\n\n\n\n\n\n\nshow some plots:\n\n\n\n\nFigure 1: Posterior densities"
  }
]